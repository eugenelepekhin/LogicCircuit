<?xml version="1.0" encoding="utf-8"?>
<Project>
	<PropertyGroup>
		<ZipApp>$(ProgramW6432)\7-Zip\7z.exe</ZipApp>
	</PropertyGroup>

	<Target Name="PublishProject" AfterTargets="AfterBuild" Condition="'$(Configuration)' == 'Release' and '$(PublishFolder)' != ''">
		<PropertyGroup>
			<Command>dotnet publish $(MSBuildProjectFile) --no-build -o $(PublishFolder) -c Release -r $(RuntimeIdentifier)</Command>
		</PropertyGroup>

		<!--<Message Importance="high" Text=">>> PublishTool: $(Command)"/>-->
		<Exec Command="$(Command)"/>
	</Target>

	<Target Name="GenerateResourceWrappers" BeforeTargets="BeforeBuild" Condition="'@(EmbeddedResource)' != '' and '$(MSBuildProjectName)' != 'LogicCircuit.UnitTest'">
		<PropertyGroup>
			<ResourceWrapperGeneratorCommand>"$(ToolsFolder)\ResourceWrapper.Generator.exe" /FlowDirection /p "$(MSBuildProjectFullPath)"</ResourceWrapperGeneratorCommand>
			<PseudoBuildDefined>$(DefineConstants.Contains("Pseudo"))</PseudoBuildDefined>
			<ResourceWrapperGeneratorCommand Condition="$(PseudoBuildDefined)">$(ResourceWrapperGeneratorCommand) /Pseudo</ResourceWrapperGeneratorCommand>
		</PropertyGroup>

		<!--<Message Importance="high" Text="$(ResourceWrapperGeneratorCommand)"/>-->
		<Exec Command="$(ResourceWrapperGeneratorCommand)"/>
	</Target>

	<Target Name="GenerateItemWrappers" BeforeTargets="BeforeBuild" Condition="Exists('$(MSBuildProjectDirectory)\Schema\CircuitProject.xml')">
		<PropertyGroup>
			<ItemWrapperGeneratorCommand>"$(ToolsFolder)\ItemWrapper.Generator.exe" /Schema "$(MSBuildProjectDirectory)\Schema\CircuitProject.xml" /Target "$(MSBuildProjectDirectory)\CircuitProject\Wrappers"</ItemWrapperGeneratorCommand>
		</PropertyGroup>

		<!--<Message Importance="high" Text=">>> Building Snap store Wrappers: $(ItemWrapperGeneratorCommand)"/>-->
		<Exec Command="$(ItemWrapperGeneratorCommand)"/>
	</Target>

	<Target Name="FindIronPythonStdLibFiles" AfterTargets="AfterBuild;Publish" Condition="'$(MSBuildProjectName)' == 'LogicCircuit'" Returns="@(IronPythonStdLibFiles)">
		<PropertyGroup>
			<IPyLibDir>$(OutDir)lib</IPyLibDir>
			<IPyLibDir Condition="'$(PublishDir)' != '' and Exists('$(PublishDir)lib')">$(PublishDir)lib</IPyLibDir>
		</PropertyGroup>

		<CreateItem Include="$(IPyLibDir)\*.*">
			<Output TaskParameter="Include" ItemName="IronPythonStdLibFiles"/>
		</CreateItem>

		<CreateProperty Value="$(IPyLibDir)">
			<Output TaskParameter="Value" PropertyName="IronPythonStdLibDir"/>
		</CreateProperty>

		<!--<Message Importance="high" Text=">>> FindIronPythonStdLibFiles IronPythonStdLibDir: $(IronPythonStdLibDir)"/>-->
	</Target>

	<Target Name="ZipIronPythonStdLibFiles" AfterTargets="FindIronPythonStdLibFiles" Inputs="@(IronPythonStdLibFiles)" Outputs="$(IronPythonStdLibDir)\..\IPyLib.zip" Condition="'$(MSBuildProjectName)' == 'LogicCircuit'">
		<PropertyGroup>
			<IronPythonStdLibZip>IPyLib.zip</IronPythonStdLibZip>
			<IronPythonStdLibZipPath>$(IronPythonStdLibDir)\..\$(IronPythonStdLibZip)</IronPythonStdLibZipPath>

			<ZipCommand>"$(ZipApp)" a ..\$(IronPythonStdLibZip) -mx9 -r *.*</ZipCommand>
		</PropertyGroup>

		<Error Condition="!Exists('$(ZipApp)')" Text="7-zip ('$(ZipApp)') not found on this machine. Please install it before creating zip file."/>

		<!--<Message Importance="high" Text=">>> ZipIronPythonStdLibFiles: dir:$(IronPythonStdLibDir) command:$(ZipCommand)"/>-->

		<Exec Condition="Exists('$(IronPythonStdLibZipPath)')" Command="del $(IronPythonStdLibZipPath)"/>
		<Exec Command="$(ZipCommand)" WorkingDirectory="$(IronPythonStdLibDir)"/>
	</Target>

	<Target Name="ZipSetup">
		<PropertyGroup>
			<BuildOutputFolder Condition="'$(BuildOutputFolder)' == ''">$(MSBuildThisFileDirectory)BuildResults</BuildOutputFolder>

			<LicenseTxt>$(MSBuildThisFileDirectory)License.txt</LicenseTxt>

			<Platform Condition="'$(Platform)' == ''">x64</Platform>
			<Bitness>32</Bitness>
			<Bitness Condition="'$(Platform)' == 'x64'">64</Bitness>
			<Bitness Condition="'$(Platform)' == 'arm64'">Arm64</Bitness>

			<SetupRoot>$(MSBuildThisFileDirectory)Setup\bin\Release_$(Platform)</SetupRoot>
			<ZipFileName>$(BuildOutputFolder)\LogicCircuit.Setup$(Bitness)bit.$(LogicCircuitVersion).zip</ZipFileName>

			<ZipCmd>"$(ZipApp)" a "$(ZipFileName)" -mx9 "$(SetupRoot)\LogicCircuitSetup_$(Bitness).msi" "$(LicenseTxt)"</ZipCmd>
		</PropertyGroup>

		<!--<Message Importance="high" Text=">>> ZipSetup"/>-->

		<Error Condition="!Exists($(ZipApp))" Text="7-zip ('$(ZipApp)') not found on this machine. Please install it before creating zip file."/>

		<Delete Condition="Exists($(ZipFileName))" Files="$(ZipFileName)"/>

		<Exec Command="$(ZipCmd)"/>
	</Target>

	<Target Name="ZipBinaries" AfterTargets="Publish" Condition="'$(Configuration)' == 'Release' and '$(MSBuildProjectName)' == 'LogicCircuit' and '$(PublishDir)' != ''">
		<ItemGroup>
			<ZipItem Include="$(MSBuildThisFileDirectory)License.txt"/>
			<ZipItem Include="$(PublishDir)*.exe"/>
			<ZipItem Include="$(PublishDir)*.dll"/>
			<ZipItem Include="$(PublishDir)*.pdb"/>
			<ZipItem Include="$(PublishDir)IPyLib.zip"/>
		</ItemGroup>

		<PropertyGroup>
			<Bitness Condition="'$(RuntimeIdentifier)' == 'win-x64'">64</Bitness>
			<Bitness Condition="'$(RuntimeIdentifier)' == 'win-arm64'">arm64</Bitness>
			<Bitness Condition="'$(RuntimeIdentifier)' == 'win-x86'">32</Bitness>
			<ZipFileName>$(BuildOutputFolder)\LogicCircuit_$(Bitness)bit.$(LogicCircuitVersion).zip</ZipFileName>

			<ItemList>@(ZipItem)</ItemList>
			<Quotes>" "</Quotes>
			<QuotedList>"$(ItemList.Replace(";", $(Quotes)))"</QuotedList>

			<ZipCmd>"$(ZipApp)" a "$(ZipFileName)" -mx9 $(QuotedList)</ZipCmd>
		</PropertyGroup>

		<Error Condition="'$(Bitness)' == ''" Text="Can't determine bitness 32 or 64. RuntimeIdentifier property was not set."/>
		<Error Condition="!Exists($(ZipApp))" Text="7-zip ('$(ZipApp)') not found on this machine. Please install it before creating zip file."/>

		<Delete Condition="Exists($(ZipFileName))" Files="$(ZipFileName)"/>

		<!--<Message Importance="high" Text="ZipBinaries command: $(ZipCmd)"/>-->
		<Exec Command="$(ZipCmd)"/>
	</Target>
</Project>
