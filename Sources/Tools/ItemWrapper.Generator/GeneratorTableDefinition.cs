// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace ItemWrapper.Generator
{
    using System.Linq;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class GeneratorTableDefinition : Transformation
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\t// Defines the shape of the table ");
            
            #line 3 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\tinternal partial struct ");
            
            #line 4 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data {\r\n");
            
            #line 5 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"

foreach(Column column in this.Table.Columns) {
	if(string.IsNullOrEmpty(column.Check)) {

            
            #line default
            #line hidden
            this.Write("\t\tpublic ");
            
            #line 9 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 9 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 10 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
	} else {
            
            #line default
            #line hidden
            this.Write("\t\tprivate ");
            
            #line 11 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Type));
            
            #line default
            #line hidden
            this.Write(" field");
            
            #line 11 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\tpublic ");
            
            #line 12 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 12 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" {\r\n\t\t\tget { return this.field");
            
            #line 13 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("; }\r\n\t\t\tset { this.field");
            
            #line 14 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 14 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Check));
            
            #line default
            #line hidden
            this.Write("(value); }\r\n\t\t}\r\n");
            
            #line 16 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"

	}
}
if(this.RealmType == RealmType.Universe) {
            
            #line default
            #line hidden
            this.Write("\t\t// Reference to the item wrapper of this record for the universe realm.\r\n\t\tinte" +
                    "rnal ");
            
            #line 21 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("? ");
            
            #line 21 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 22 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t// Field accessors\r\n");
            
            #line 24 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"

foreach(Column column in this.Table.Columns) {
	string defaultValue = (column.Default != null) ? column.Default : "default";
	string format;
	string nullMark = "";
	switch(column.Type) {
	case "string":
		format = column.IgnoreCase ? "StringComparer.OrdinalIgnoreCase.Compare({0}, {1})" : "StringComparer.Ordinal.Compare({0}, {1})";
		if(column.Default != null) {
			defaultValue = Transformation.MakeString(defaultValue);
		} else {
			defaultValue = "null!";
		}
		nullMark = "?";
		break;
	case "int":
		format = "Math.Sign((long){0} - (long){1})";
		break;
	case "float":
	case "double":
		format = "Math.Sign({0} - {1})";
		break;
	case "bool":
	case "Guid":
	default:
		format = "{0}.CompareTo({1})";
		break;
	}
	Func<string, string, string> compare = (l, r) => string.Format(format, l, r);

            
            #line default
            #line hidden
            this.Write("\t\t// Accessor of the ");
            
            #line 54 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" field\r\n");
            
            #line 55 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
if(column.Type == "RowId") {
            
            #line default
            #line hidden
            this.Write("\t\tpublic sealed class ");
            
            #line 56 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("Field : RowIdField<");
            
            #line 56 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data> {\r\n\t\t\tpublic static readonly ");
            
            #line 57 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("Field Field = new ");
            
            #line 57 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("Field();\r\n\t\t\tprivate ");
            
            #line 58 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("Field() : base(\"");
            
            #line 58 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\") {}\r\n\t\t\tpublic override RowId GetValue(ref ");
            
            #line 59 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data record) {\r\n\t\t\t\treturn record.");
            
            #line 60 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t}\r\n\t\t\tpublic override void SetValue(ref ");
            
            #line 62 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data record, RowId value) {\r\n\t\t\t\trecord.");
            
            #line 63 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" = value;\r\n\t\t\t}\r\n\t\t}\r\n");
            
            #line 66 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
} else {
            
            #line default
            #line hidden
            this.Write("\t\tpublic sealed class ");
            
            #line 67 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("Field : IField<");
            
            #line 67 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data, ");
            
            #line 67 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Type));
            
            #line default
            #line hidden
            this.Write(">");
            
            #line 67 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
if(this.Table.Persistent) {
            
            #line default
            #line hidden
            this.Write(", IFieldSerializer<");
            
            #line 67 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data>");
            
            #line 67 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
}
            
            #line default
            #line hidden
            this.Write(" {\r\n\t\t\tpublic static readonly ");
            
            #line 68 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("Field Field = new ");
            
            #line 68 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("Field();\r\n\t\t\tprivate ");
            
            #line 69 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("Field() {}\r\n\t\t\tpublic string Name { get { return \"");
            
            #line 70 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("\"; } }\r\n\t\t\tpublic int Order { get; set; }\r\n\t\t\tpublic ");
            
            #line 72 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Type));
            
            #line default
            #line hidden
            this.Write(" DefaultValue { get { return ");
            
            #line 72 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(defaultValue));
            
            #line default
            #line hidden
            this.Write("; } }\r\n\t\t\tpublic ");
            
            #line 73 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Type));
            
            #line default
            #line hidden
            this.Write(" GetValue(ref ");
            
            #line 73 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data record) {\r\n\t\t\t\treturn record.");
            
            #line 74 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t}\r\n\t\t\tpublic void SetValue(ref ");
            
            #line 76 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data record, ");
            
            #line 76 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Type));
            
            #line default
            #line hidden
            this.Write(" value) {\r\n\t\t\t\trecord.");
            
            #line 77 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" = value;\r\n\t\t\t}\r\n\t\t\tpublic int Compare(ref ");
            
            #line 79 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data l, ref ");
            
            #line 79 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data r) {\r\n\t\t\t\treturn ");
            
            #line 80 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(compare("l." + column.Name, "r." + column.Name)));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t}\r\n\t\t\tpublic int Compare(");
            
            #line 82 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Type + nullMark));
            
            #line default
            #line hidden
            this.Write(" l, ");
            
            #line 82 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Type + nullMark));
            
            #line default
            #line hidden
            this.Write(" r) {\r\n\t\t\t\treturn ");
            
            #line 83 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(compare("l", "r")));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t}\r\n");
            
            #line 85 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"

	if(this.Table.Persistent) {
		string parse = "text";
		switch(column.Type) {
		case "string":
			break;
		case "int":
			parse = "int.Parse(text, CultureInfo.InvariantCulture)";
			break;
		case "float":
			parse = "float.Parse(text, CultureInfo.InvariantCulture)";
			break;
		case "double":
			parse = "double.Parse(text, CultureInfo.InvariantCulture)";
			break;
		case "bool":
			parse = "bool.Parse(text)";
			break;
		case "Guid":
			parse = "new Guid(text)";
			break;
		case "System.Windows.Media.Color":
			parse = "(System.Windows.Media.Color)System.Windows.Media.ColorConverter.ConvertFromString(text)";
			break;
		default:
			parse = "EnumHelper.Parse<" + column.Type + ">(text, this.DefaultValue)";
			break;
		}

            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t// Implementation of interface IFieldSerializer<");
            
            #line 115 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data>\r\n\t\t\tbool IFieldSerializer<");
            
            #line 116 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data>.NeedToSave(ref ");
            
            #line 116 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data data) {\r\n\t\t\t\treturn this.Compare(data.");
            
            #line 117 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(", this.DefaultValue) != 0;\r\n\t\t\t}\r\n\t\t\tstring IFieldSerializer<");
            
            #line 119 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data>.GetTextValue(ref ");
            
            #line 119 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data data) {\r\n\t\t\t\treturn string.Format(CultureInfo.InvariantCulture, \"{0}\", data." +
                    "");
            
            #line 120 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t}\r\n\t\t\tvoid IFieldSerializer<");
            
            #line 122 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data>.SetDefault(ref ");
            
            #line 122 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data data) {\r\n\t\t\t\tdata.");
            
            #line 123 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" = this.DefaultValue;\r\n\t\t\t}\r\n\t\t\tvoid IFieldSerializer<");
            
            #line 125 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data>.SetTextValue(ref ");
            
            #line 125 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data data, string text) {\r\n\t\t\t\tdata.");
            
            #line 126 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 126 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parse));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t}\r\n\t\t\tbool IFieldSerializer<");
            
            #line 128 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data>.WasWritten { get; set; }\r\n\r\n");
            
            #line 130 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
	}
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n");
            
            #line 132 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 134 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"

}
if(this.RealmType == RealmType.Universe) {
            
            #line default
            #line hidden
            this.Write("\t\t// Special field used to access item wrapper of this record.\r\n\t\t// This is used" +
                    " when no other universes is used\r\n\t\tinternal sealed class ");
            
            #line 139 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Field : IField<");
            
            #line 139 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data, ");
            
            #line 139 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("> {\r\n\t\t\tpublic static readonly ");
            
            #line 140 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Field Field = new ");
            
            #line 140 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Field();\r\n\t\t\tprivate ");
            
            #line 141 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Field() {}\r\n\t\t\tpublic string Name { get { return \"");
            
            #line 142 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Wrapper\"; } }\r\n\t\t\tpublic int Order { get; set; }\r\n\t\t\tpublic ");
            
            #line 144 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" DefaultValue { get { return null!; } }\r\n\t\t\tpublic ");
            
            #line 145 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" GetValue(ref ");
            
            #line 145 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data record) {\r\n\t\t\t\treturn record.");
            
            #line 146 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("!;\r\n\t\t\t}\r\n\t\t\tpublic void SetValue(ref ");
            
            #line 148 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data record, ");
            
            #line 148 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" value) {\r\n\t\t\t\trecord.");
            
            #line 149 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" = value;\r\n\t\t\t}\r\n\t\t\tpublic int Compare(ref ");
            
            #line 151 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data l, ref ");
            
            #line 151 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data r) {\r\n\t\t\t\treturn this.Compare(l.");
            
            #line 152 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(", r.");
            
            #line 152 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t}\r\n\t\t\tpublic int Compare(");
            
            #line 154 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("? l, ");
            
            #line 154 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("? r) {\r\n\t\t\t\tif(object.ReferenceEquals(l, r)) return 0;\r\n\t\t\t\tif(l == null) return " +
                    "-1;\r\n\t\t\t\tif(r == null) return 1;\r\n\t\t\t\treturn l.");
            
            #line 158 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("RowId.CompareTo(r.");
            
            #line 158 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("RowId);\r\n\t\t\t}\r\n\t\t}\r\n\r\n");
            
            #line 162 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\tprivate static readonly IField<");
            
            #line 163 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data>[] fields = {\r\n");
            
            #line 164 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
foreach(Column column in this.Table.Columns) {
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 165 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("Field.Field,\r\n");
            
            #line 166 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
}
            
            #line default
            #line hidden
            
            #line 167 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
if(this.RealmType == RealmType.Universe) {
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 168 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Field.Field\r\n");
            
            #line 169 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t};\r\n\r\n\t\t// Creates table.\r\n\t\tpublic static TableSnapshot<");
            
            #line 173 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data> CreateTable(StoreSnapshot store) {\r\n\t\t\tTableSnapshot<");
            
            #line 174 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data> table = new TableSnapshot<");
            
            #line 174 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data>(store, \"");
            
            #line 174 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("\", ");
            
            #line 174 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data.fields);\r\n\t\t\t// Create all but foreign keys of the table\r\n");
            
            #line 176 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"

foreach(Key key in this.Table.Keys) {
	if(key.IsUnique() || key.IsIndex()) { // this will ignore only foreign keys
		string function = key.IsUnique() ? "MakeUnique" : "CreateIndex";
		if(key.KeyType == KeyType.Auto) {

            
            #line default
            #line hidden
            this.Write("\t\t\ttable.MakeAutoUnique();\r\n");
            
            #line 183 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"

		} else if(key.Count == 1) {
			string primary = "";
			if(key.IsUnique()) {
				if(key.IsPrimary()) {
					primary = ", true";
				} else {
					primary = ", false";
				}
			}

            
            #line default
            #line hidden
            this.Write("\t\t\ttable.");
            
            #line 194 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(function));
            
            #line default
            #line hidden
            this.Write("(\"");
            
            #line 194 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(key.Name));
            
            #line default
            #line hidden
            this.Write("\", ");
            
            #line 194 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data.");
            
            #line 194 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(key[0].Name));
            
            #line default
            #line hidden
            this.Write("Field.Field ");
            
            #line 194 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primary));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 195 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"

		} else {

            
            #line default
            #line hidden
            this.Write("\t\t\ttable.");
            
            #line 198 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(function));
            
            #line default
            #line hidden
            this.Write("(\"");
            
            #line 198 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(key.Name));
            
            #line default
            #line hidden
            this.Write("\", ");
            
            #line 198 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data.");
            
            #line 198 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(key[0].Name));
            
            #line default
            #line hidden
            this.Write("Field.Field, ");
            
            #line 198 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data.");
            
            #line 198 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(key[1].Name));
            
            #line default
            #line hidden
            this.Write("Field.Field);\r\n");
            
            #line 199 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"

		}
	}
}

            
            #line default
            #line hidden
            this.Write("\t\t\t// Return created table\r\n\t\t\treturn table;\r\n\t\t}\r\n\r\n\t\t// Creates all foreign key" +
                    "s of the table\r\n\t\tpublic static void CreateForeignKeys(StoreSnapshot store) {\r\n");
            
            #line 210 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
if(this.Table.Keys.Any(k => k.IsForeign())) {
            
            #line default
            #line hidden
            this.Write("\t\t\tTableSnapshot<");
            
            #line 211 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data>? table = (TableSnapshot<");
            
            #line 211 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data>?)store.Table(\"");
            
            #line 211 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("\");\r\n\t\t\tDebug.Assert(table != null);\r\n");
            
            #line 213 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"

foreach(Key key in this.Table.Keys) {
	if(key.IsForeign()) {

            
            #line default
            #line hidden
            this.Write("\t\t\ttable.CreateForeignKey(\"");
            
            #line 217 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(key.Name));
            
            #line default
            #line hidden
            this.Write("\", store.Table(\"");
            
            #line 217 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(key.ParentName));
            
            #line default
            #line hidden
            this.Write("\"), ");
            
            #line 217 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data.");
            
            #line 217 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(key[0].Name));
            
            #line default
            #line hidden
            this.Write("Field.Field, ForeignKeyAction.");
            
            #line 217 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(key.Action));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 217 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(key.AllowsDefault ? "true" : "false"));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 218 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorTableDefinition.tt"

		}
	}
}

            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\t}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
