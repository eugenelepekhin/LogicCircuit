// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace ItemWrapper.Generator
{
    using System.Collections.Generic;
    using System.Linq;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class GeneratorSetWrapper : Transformation
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 4 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"

	bool isSubclass = this.Table.IsSubclass();
	string createParam = "RowId rowId";
	string newParam = "this." + this.Store.Name + ", rowId";
	if(isSubclass) {
		foreach(Table parent in this.Table.Ancestors(false)) {
			createParam += ", RowId " + parent.Name + "RowId";
			newParam += ", " + parent.Name + "RowId";
		}
	}

            
            #line default
            #line hidden
            this.Write("\t// Wrapper for table ");
            
            #line 15 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(".\r\n\tpartial class ");
            
            #line 16 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Set : INotifyCollectionChanged, IEnumerable<");
            
            #line 16 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("> {\r\n\r\n\t\tpublic event NotifyCollectionChangedEventHandler? CollectionChanged;\r\n\r\n" +
                    "\t\tinternal TableSnapshot<");
            
            #line 20 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data> Table { get; private set; }\r\n\r\n");
            
            #line 22 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
if(this.RealmType != RealmType.Universe) {
            
            #line default
            #line hidden
            this.Write("\t\t// Maps rowId to row wrapper\r\n\t\tprivate Dictionary<RowId, ");
            
            #line 24 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("> itemByRowId = new Dictionary<RowId, ");
            
            #line 24 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(">();\r\n\r\n");
            
            #line 26 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t// Gets StoreSnapshot this set belongs to.\r\n\t\tpublic ");
            
            #line 28 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Store.Name));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 28 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Store.Name));
            
            #line default
            #line hidden
            this.Write(" { get { return (");
            
            #line 28 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Store.Name));
            
            #line default
            #line hidden
            this.Write(")this.Table.StoreSnapshot; } }\r\n\r\n\t\t// Constructor\r\n\t\t#pragma warning disable CS8" +
                    "618 // Non-nullable field must contain a non-null value when exiting constructor" +
                    ". Consider declaring as nullable.\r\n\t\tpublic ");
            
            #line 32 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Set(");
            
            #line 32 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Store.Name));
            
            #line default
            #line hidden
            this.Write(" store) {\r\n\t\t\tITableSnapshot? table = store.Table(\"");
            
            #line 33 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("\");\r\n\t\t\tif(table != null) {\r\n\t\t\t\tDebug.Assert(store.IsFrozen, \"The store should b" +
                    "e frozen\");\r\n\t\t\t\tthis.Table = (TableSnapshot<");
            
            #line 36 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data>)table;\r\n\t\t\t} else {\r\n\t\t\t\tDebug.Assert(!store.IsFrozen, \"In order to create " +
                    "table, the store should not be frozen\");\r\n\t\t\t\tthis.Table = ");
            
            #line 39 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data.CreateTable(store);\r\n\t\t\t}\r\n\t\t\tthis.Initialize");
            
            #line 41 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Set();\r\n\t\t}\r\n\t\t#pragma warning restore CS8618 // Non-nullable field must contain " +
                    "a non-null value when exiting constructor. Consider declaring as nullable.\r\n\r\n\t\t" +
                    "partial void Initialize");
            
            #line 45 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Set();\r\n\r\n\t\t//internal void Register() {\r\n\t\t//\tforeach(RowId rowId in this.Table." +
                    "Rows) {\r\n\t\t//\t\tthis.FindOrCreate(rowId);\r\n\t\t//\t}\r\n\t\t//}\r\n\r\n");
            
            #line 53 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
if(this.RealmType == RealmType.Multiverse) {
            
            #line default
            #line hidden
            this.Write("\t\t// Registers wrapper\r\n\t\tinternal void Register");
            
            #line 55 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 55 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" item) {\r\n\t\t\tthis.itemByRowId.Add(item.");
            
            #line 56 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("RowId, item);\r\n");
            
            #line 57 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
	if(isSubclass) {
            
            #line default
            #line hidden
            this.Write("\t\t\tthis.");
            
            #line 58 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Store.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 58 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.BaseName()));
            
            #line default
            #line hidden
            this.Write("Set.Register");
            
            #line 58 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.BaseName()));
            
            #line default
            #line hidden
            this.Write("(item);\r\n");
            
            #line 59 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
	}
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n");
            
            #line 61 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t// gets items wrapper by RowId\r\n\t\tpublic ");
            
            #line 64 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("? Find(RowId rowId) {\r\n");
            
            #line 65 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
if(this.RealmType == RealmType.Universe) {
            
            #line default
            #line hidden
            this.Write("\t\t\tif(!rowId.IsEmpty) {\r\n\t\t\t\treturn this.Table.GetField(rowId, ");
            
            #line 67 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data.");
            
            #line 67 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Field.Field);\r\n\t\t\t}\r\n");
            
            #line 69 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
} else if(this.RealmType == RealmType.Multiverse) {
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 70 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" item;\r\n\t\t\tif(this.itemByRowId.TryGetValue(rowId, out item)) {\r\n\t\t\t\treturn item;\r" +
                    "\n\t\t\t}\r\n");
            
            #line 74 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\treturn null;\r\n\t\t}\r\n\r\n");
            
            #line 78 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
if(this.RealmType == RealmType.Multiverse) {
            
            #line default
            #line hidden
            this.Write("\t\tprivate void Delete(RowId rowId) {\r\n\t\t\tif(this.itemByRowId.ContainsKey(rowId)) " +
                    "{\r\n\t\t\t\tthis.itemByRowId.Remove(rowId);\r\n\t\t\t}\r\n\t\t}\r\n");
            
            #line 84 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t// gets items wrapper by RowId\r\n\t\tprivate IEnumerable<");
            
            #line 87 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("> Select(IEnumerable<RowId> rows) {\r\n\t\t\tforeach(RowId rowId in rows) {\r\n\t\t\t\t");
            
            #line 89 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(@"? item = this.Find(rowId);
				Debug.Assert(item != null, ""What is the reason for the item not to be found?"");
				yield return item;
			}
		}

		// Create wrapper for the row and register it in the dictionary
		[System.Diagnostics.CodeAnalysis.SuppressMessage(""Performance"", ""CA1822:Mark members as static"")]
		private ");
            
            #line 97 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" Create(");
            
            #line 97 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(createParam));
            
            #line default
            #line hidden
            this.Write(") {\r\n");
            
            #line 98 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
if(this.Table.ItemModifier == ItemModifier.None) {
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 99 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" item = new ");
            
            #line 99 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 99 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(newParam));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 100 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
	if(this.RealmType == RealmType.Multiverse) {
            
            #line default
            #line hidden
            this.Write("\t\t\tthis.Register");
            
            #line 101 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("(item);\r\n");
            
            #line 102 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
	}
            
            #line default
            #line hidden
            this.Write("\t\t\treturn item;\r\n");
            
            #line 104 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
} else {
            
            #line default
            #line hidden
            this.Write("\t\t\tthrow new InvalidOperationException();\r\n");
            
            #line 106 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\r\n\t\t[System.Diagnostics.CodeAnalysis.SuppressMessage(\"Microsoft.Maintainabil" +
                    "ity\", \"CA1506:AvoidExcessiveClassCoupling\")]\r\n\t\tinternal ");
            
            #line 110 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" FindOrCreate(RowId rowId) {\r\n\t\t\tDebug.Assert(!rowId.IsEmpty && !this.Table.IsDel" +
                    "eted(rowId), \"Bad RowId\");\r\n\t\t\t");
            
            #line 112 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("? item;\r\n");
            
            #line 113 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
if(this.RealmType == RealmType.Universe) {
            
            #line default
            #line hidden
            this.Write("\t\t\tif((item = this.Find(rowId)) != null) {\r\n");
            
            #line 115 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
} else if(this.RealmType == RealmType.Multiverse) {
            
            #line default
            #line hidden
            this.Write("\t\t\tif(this.itemByRowId.TryGetValue(rowId, out item)) {\r\n");
            
            #line 117 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t\tDebug.Assert(!item.IsDeleted(), \"Deleted item should not be present in the di" +
                    "ctionary\");\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n");
            
            #line 121 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"

if(isSubclass || this.Table.Subclasses().FirstOrDefault() != null) {
	Key primaryKey = this.Table.PrimaryKey();
	if(primaryKey.KeyType != KeyType.Auto) {
		Column pkColumn = primaryKey[0];
		this.WriteLine("\t\t\t" + pkColumn.Type + " primaryKeyValue = this.Table.GetField(rowId, " + this.Table.Name + "Data." + pkColumn.Name + "Field.Field);");
	} else {
		this.WriteLine("\t\t\tRowId primaryKeyValue = rowId;");
	}
}

            
            #line default
            #line hidden
            
            #line 132 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"

if(this.Table.Subclasses().FirstOrDefault() != null) {
	foreach(Table subclass in this.Table.Subclasses()) {
		// Note! subclass cannot have auto primary key.
		string primaryKeyField = subclass.Name + "Data." + subclass.PrimaryKey()[0].Name + "Field.Field";

            
            #line default
            #line hidden
            this.Write("\r\n\t\t\tRowId rowId");
            
            #line 139 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subclass.Name));
            
            #line default
            #line hidden
            this.Write(" = this.");
            
            #line 139 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Store.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 139 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subclass.Name));
            
            #line default
            #line hidden
            this.Write("Set.Table.Find(");
            
            #line 139 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primaryKeyField));
            
            #line default
            #line hidden
            this.Write(", primaryKeyValue);\r\n\t\t\tif(!rowId");
            
            #line 140 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subclass.Name));
            
            #line default
            #line hidden
            this.Write(".IsEmpty) {\r\n\t\t\t\treturn this.");
            
            #line 141 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Store.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 141 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subclass.Name));
            
            #line default
            #line hidden
            this.Write("Set.FindOrCreate(rowId");
            
            #line 141 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subclass.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t}\r\n");
            
            #line 143 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"

	}
}

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 148 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
if(!isSubclass) {
            
            #line default
            #line hidden
            this.Write("\t\t\treturn this.Create(rowId);\r\n");
            
            #line 150 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
} else {
	Column mainPrimary = this.Table.PrimaryKey()[0];
	string selectList = "rowId";

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 155 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"

	foreach(Table parent in this.Table.Ancestors(false)) {
		Key pk = parent.PrimaryKey();
		if(pk.KeyType == KeyType.Auto) {
			selectList += ", primaryKeyValue";
			continue;
		} else {
			selectList += ", table" + parent.Name + ".Find(" + parent.Name + "Data." + pk[0].Name + "Field.Field, primaryKeyValue)";
		}

            
            #line default
            #line hidden
            this.Write("\t\t\tTableSnapshot<");
            
            #line 165 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write("Data>? table");
            
            #line 165 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write(" = (TableSnapshot<");
            
            #line 165 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write("Data>?)this.");
            
            #line 165 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Store.Name));
            
            #line default
            #line hidden
            this.Write(".Table(\"");
            
            #line 165 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write("\");\r\n\t\t\tDebug.Assert(table");
            
            #line 166 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write(" != null);\r\n");
            
            #line 167 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
	}
            
            #line default
            #line hidden
            this.Write("\t\t\treturn this.Create(");
            
            #line 168 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(selectList));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 169 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\r\n\t\t// Creates ");
            
            #line 172 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" wrapper\r\n\t\tprivate ");
            
            #line 173 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" CreateItem(\r\n\t\t\t// Fields of ");
            
            #line 174 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" table\r\n");
            
            #line 175 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"

foreach(Column column in this.Table.Columns) {
	Key foreign = this.Table.ForeignKey(column);
	if(foreign != null && foreign.KeyType == KeyType.Subclass && this.Table.Ancestors(true).Last().PrimaryKey().KeyType == KeyType.Auto) {
		continue;
	}
	this.Write("\t\t\t");
	if(foreign == null || foreign.KeyType == KeyType.Subclass) {
		this.Write(column.Type + " " + column.Name);
	} else {
		this.Write(foreign.ParentName + " " + foreign.RoleName());
	}
	if(!column.IsLast()) {
		this.WriteLine(",");
	}
}
if(isSubclass) {
	this.WriteLine("");
	foreach(Table parent in this.Table.Ancestors(false)) {
		this.WriteLine("\t\t\t// Fields of " + parent.Name + " table");
		foreach(Column column in parent.Columns) {
			if(!parent.IsPrimary(column)) {
				this.Write("\t\t\t,");
				Key foreign = parent.ForeignKey(column);
				if(foreign == null) {
					this.Write(column.Type + " " + column.Name);
				} else {
					this.Write(foreign.ParentName + " " + foreign.RoleName());
				}
				//if(!column.IsLast()) {
				//	this.WriteLine(",");
				//}
			}
		}
	}
}

            
            #line default
            #line hidden
            this.Write("\r\n\t\t) {\r\n");
            
            #line 214 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"

string subclassInsert = string.Empty;
if(isSubclass) {
	Column mainPrimary = this.Table.PrimaryKey()[0];
	foreach(Table parent in this.Table.Ancestors(false).Reverse()) {
		subclassInsert += ", rowId" + parent.Name;

            
            #line default
            #line hidden
            this.Write("\t\t\tTableSnapshot<");
            
            #line 221 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write("Data>? table");
            
            #line 221 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write(" = (TableSnapshot<");
            
            #line 221 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write("Data>?)this.");
            
            #line 221 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Store.Name));
            
            #line default
            #line hidden
            this.Write(".Table(\"");
            
            #line 221 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write("\");\r\n\t\t\tDebug.Assert(table");
            
            #line 222 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write(" != null);\r\n\t\t\t");
            
            #line 223 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write("Data data");
            
            #line 223 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 223 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write("Data() {\r\n");
            
            #line 224 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"

		foreach(Column column in parent.Columns) {
			this.Write("\t\t\t\t");
			if(parent.IsPrimary(column)) {
				this.Write(column.Name + " = ");
				if(parent.Ancestors(true).Last().PrimaryKey().KeyType == KeyType.Auto) {
					this.Write("rowId" + parent.BaseName());
				} else {
					this.Write(mainPrimary.Name);
				}
			} else {
				Key foreign = parent.ForeignKey(column);
				if(foreign == null) {
					this.Write(column.Name + " = " + column.Name);
				} else {
					string fn = foreign.RoleName();
					Key primaryKey = foreign.Parent().PrimaryKey();
					string parentId = (primaryKey.KeyType == KeyType.Auto) ? primaryKey.Table.Name + "RowId" : primaryKey[0].Name;
					this.Write(column.Name + " = (" + fn + " != null) ? " + fn + "." + parentId + " : " + parent.Name + "Data." + column.Name + "Field.Field.DefaultValue");
				}
			}
			if(column != parent.Columns[parent.Columns.Count - 1]) {
				this.Write(",");
			}
			this.WriteLine(null);
		}

            
            #line default
            #line hidden
            this.Write("\t\t\t};\r\n\t\t\tRowId rowId");
            
            #line 252 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write(" = table");
            
            #line 252 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write(".Insert(ref data");
            
            #line 252 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parent.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 254 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"

	}
}

            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 258 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data data");
            
            #line 258 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 258 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data() {\r\n");
            
            #line 259 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"

foreach(Column column in this.Table.Columns) {
	Key foreign = this.Table.ForeignKey(column);
	if(foreign == null || foreign.KeyType == KeyType.Subclass) {
		string value = column.Name;
		if(foreign != null && this.Table.Ancestors(true).Last().PrimaryKey().KeyType == KeyType.Auto) {
			value = "rowId" + foreign.ParentName;
		}

            
            #line default
            #line hidden
            this.Write("\t\t\t\t");
            
            #line 268 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 268 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(value));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 269 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"

	} else {
		Table parent = foreign.Parent();
		Key primaryKey = parent.PrimaryKey();
		string parentId = (primaryKey.KeyType == KeyType.Auto) ? parent.Name + "RowId" : primaryKey[0].Name;

            
            #line default
            #line hidden
            this.Write("\t\t\t\t");
            
            #line 275 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 275 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(foreign.RoleName()));
            
            #line default
            #line hidden
            this.Write(" != null) ? ");
            
            #line 275 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(foreign.RoleName()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 275 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parentId));
            
            #line default
            #line hidden
            this.Write(" : ");
            
            #line 275 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data.");
            
            #line 275 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("Field.Field.DefaultValue,\r\n");
            
            #line 276 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"

	}
}

            
            #line default
            #line hidden
            this.Write("\t\t\t};\r\n\t\t\treturn this.Create(this.Table.Insert(ref data");
            
            #line 281 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 281 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subclassInsert));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t}\r\n\r\n\t\t// Search helpers\r\n\r\n");
            
            #line 286 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"

System.Collections.Generic.HashSet<string> searchFunctionName = new System.Collections.Generic.HashSet<string>();
foreach(Key key in this.Table.Keys) {
	string returnType = this.Table.Name;
	string function = "Find";
	if(!key.IsUnique()) {
		returnType = "IEnumerable<" + returnType + ">";
		function = "Select";
	} else {
		returnType += "?";
	}
	if(key.Count == 1) {
		Column column = key[0];
		if(key.IsUnique() || this.Table.UniqueKey(column) == null) {
			Key foreign = this.Table.ForeignKey(column);
			if(foreign != null && foreign.KeyType == KeyType.Subclass) {
				foreign = null;
			}
			string columnType = column.Type;
			string columnName = column.Name;
			string value = Transformation.Camelize(columnName);
			if(foreign != null) {
				columnType = foreign.ParentName;
				columnName = foreign.RoleName();
				Table parent = foreign.Parent();
				Key primaryKey = parent.PrimaryKey();
				value = Transformation.Camelize(columnName) + "." + ((primaryKey.KeyType == KeyType.Auto) ? parent.Name + "RowId" : primaryKey[0].Name);
			}
			string suffix = "";
			if(!key.IsPrimary() || isSubclass) {
				suffix = "By" + columnName;
			}
			if(searchFunctionName.Add(function + suffix)) {

            
            #line default
            #line hidden
            this.Write("\t\t// ");
            
            #line 320 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(function));
            
            #line default
            #line hidden
            this.Write("s ");
            
            #line 320 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" by ");
            
            #line 320 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(columnName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\tpublic ");
            
            #line 321 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 321 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(function));
            
            #line default
            #line hidden
            
            #line 321 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(suffix));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 321 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(columnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 321 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Transformation.Camelize(columnName)));
            
            #line default
            #line hidden
            this.Write(") {\r\n\t\t\treturn this.");
            
            #line 322 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(function));
            
            #line default
            #line hidden
            this.Write("(this.Table.");
            
            #line 322 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(function));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 322 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data.");
            
            #line 322 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));
            
            #line default
            #line hidden
            this.Write("Field.Field, ");
            
            #line 322 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(value));
            
            #line default
            #line hidden
            this.Write("));\r\n\t\t}\r\n\r\n");
            
            #line 325 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"

			}
		}
	} else if(key.KeyType != KeyType.Auto) {
		Column column0 = key[0];
		Column column1 = key[1];
		if(key.IsUnique() || this.Table.UniqueKey(column0, column1) == null) {
			Key foreign0 = this.Table.ForeignKey(column0);
			if(foreign0 != null && foreign0.KeyType == KeyType.Subclass) {
				foreign0 = null;
			}
			string column0Type = column0.Type;
			string column0Name = column0.Name;
			string value0 = Transformation.Camelize(column0Name);
			if(foreign0 != null) {
				column0Type = foreign0.ParentName;
				column0Name = foreign0.RoleName();
				Table parent = foreign0.Parent();
				Key primaryKey = parent.PrimaryKey();
				value0 = Transformation.Camelize(column0Name) + "." + ((primaryKey.KeyType == KeyType.Auto) ? parent.Name + "RowId" : primaryKey[0].Name);
			}
			Key foreign1 = this.Table.ForeignKey(column1);
			if(foreign1 != null && foreign1.KeyType == KeyType.Subclass) {
				foreign1 = null;
			}
			string column1Type = column1.Type;
			string column1Name = column1.Name;
			string value1 = Transformation.Camelize(column1Name);
			if(foreign1 != null) {
				column1Type = foreign1.ParentName;
				column1Name = foreign1.RoleName();
				Table parent = foreign1.Parent();
				Key primaryKey = parent.PrimaryKey();
				value1 = Transformation.Camelize(column1Name) + "." + ((primaryKey.KeyType == KeyType.Auto) ? parent.Name + "RowId" : primaryKey[0].Name);
			}
			string suffix = "";
			if(!key.IsPrimary()) {
				suffix = "By" + column0Name + "And" + column1Name;
			}
			if(searchFunctionName.Add(function + suffix)) {

            
            #line default
            #line hidden
            this.Write("\t\t// ");
            
            #line 366 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(function));
            
            #line default
            #line hidden
            this.Write("s ");
            
            #line 366 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" by ");
            
            #line 366 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column0Name));
            
            #line default
            #line hidden
            this.Write(" and ");
            
            #line 366 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column1Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\tpublic ");
            
            #line 367 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 367 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(function));
            
            #line default
            #line hidden
            
            #line 367 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(suffix));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 367 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column0Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 367 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Transformation.Camelize(column0Name)));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 367 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column1Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 367 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Transformation.Camelize(column1Name)));
            
            #line default
            #line hidden
            this.Write(") {\r\n\t\t\treturn this.");
            
            #line 368 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(function));
            
            #line default
            #line hidden
            this.Write("(\r\n\t\t\t\tthis.Table.");
            
            #line 369 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(function));
            
            #line default
            #line hidden
            this.Write("(\r\n\t\t\t\t\t");
            
            #line 370 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data.");
            
            #line 370 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column0.Name));
            
            #line default
            #line hidden
            this.Write("Field.Field, ");
            
            #line 370 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data.");
            
            #line 370 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(column1.Name));
            
            #line default
            #line hidden
            this.Write("Field.Field,\r\n\t\t\t\t\t");
            
            #line 371 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(value0));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 371 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(value1));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\r\n");
            
            #line 376 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"

			}
		}
	}
}

            
            #line default
            #line hidden
            this.Write("\t\tpublic IEnumerator<");
            
            #line 382 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("> GetEnumerator() {\r\n");
            
            #line 383 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
if(this.RealmType != RealmType.Universe) {
            
            #line default
            #line hidden
            this.Write("\t\t\tif(this.");
            
            #line 384 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Store.Name));
            
            #line default
            #line hidden
            this.Write(".IsEditor || this.");
            
            #line 384 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Store.Name));
            
            #line default
            #line hidden
            this.Write(".UpdateInProgress) {\r\n\t\t\t\treturn new Enumerator(this, this.Table.GetEnumerator())" +
                    ";\r\n\t\t\t} else {\r\n\t\t\t\treturn this.itemByRowId.Values.GetEnumerator();\r\n\t\t\t}\r\n");
            
            #line 389 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
} else {
            
            #line default
            #line hidden
            this.Write("\t\t\treturn this.Select(this.Table.Rows).GetEnumerator();\r\n");
            
            #line 391 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
}
            
            #line default
            #line hidden
            this.Write(@"		}

		System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() {
			return this.GetEnumerator();
		}

		private void NotifyCollectionChanged(NotifyCollectionChangedEventArgs arg) {
			NotifyCollectionChangedEventHandler? handler = this.CollectionChanged;
			if(handler != null) {
");
            
            #line 401 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
if(this.UseDispatcher) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\tSystem.Windows.Threading.Dispatcher dispatcher = this.");
            
            #line 402 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Store.Name));
            
            #line default
            #line hidden
            this.Write(".Dispatcher;\r\n\t\t\t\tif(dispatcher != null && dispatcher.Thread != System.Threading." +
                    "Thread.CurrentThread) {\r\n\t\t\t\t\tdispatcher.Invoke(new Action<NotifyCollectionChang" +
                    "edEventArgs>(this.NotifyCollectionChanged), arg);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n");
            
            #line 407 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t\thandler(this, arg);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinternal List<");
            
            #line 412 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(">? UpdateSet(int oldVersion, int newVersion) {\r\n\t\t\tIEnumerator<TableChange<");
            
            #line 413 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data>>? change = this.Table.GetVersionChangeChanges(oldVersion, newVersion);\r\n\t\t\t" +
                    "if(change != null) {\r\n\t\t\t\tbool handlerAttached = (this.CollectionChanged != null" +
                    ");\r\n\t\t\t\tList<");
            
            #line 416 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(">? del = (handlerAttached) ? new List<");
            
            #line 416 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(@">() : null;
				while(change.MoveNext()) {
					switch(change.Current.Action) {
					case SnapTableAction.Insert:
						this.FindOrCreate(change.Current.RowId);
						Debug.Assert(this.Find(change.Current.RowId) != null, ""Why the item was not created?"");
						break;
					case SnapTableAction.Delete:
");
            
            #line 424 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
if(this.RealmType != RealmType.Universe) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tDebug.Assert(this.Find(change.Current.RowId) != null, \"Why the item does no" +
                    "t exist?\");\r\n\t\t\t\t\t\tif(handlerAttached) {\r\n\t\t\t\t\t\t\tdel.Add(this.Find(change.Curren" +
                    "t.RowId)!);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.Delete(change.Current.RowId);\r\n");
            
            #line 430 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
} else {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tif(handlerAttached) {\r\n\t\t\t\t\t\t\t");
            
            #line 432 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(" item = change.Current.GetOldField(");
            
            #line 432 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data.");
            
            #line 432 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Field.Field);\r\n\t\t\t\t\t\t\tDebug.Assert(item.IsDeleted());\r\n\t\t\t\t\t\t\tdel!.Add(item);\r\n\t\t" +
                    "\t\t\t\t}\r\n");
            
            #line 436 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
}
            
            #line default
            #line hidden
            this.Write(@"						break;
					default:
						Debug.Assert(change.Current.Action == SnapTableAction.Update, ""Unknown action"");
						Debug.Assert(this.Find(change.Current.RowId) != null, ""Why the item does not exist during update?"");
						break;
					}
				}
				change.Dispose();
				return del;
			}
			return null;
		}

		internal void NotifyVersionChanged(int oldVersion, int newVersion, List<");
            
            #line 450 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(">? deleted) {\r\n\t\t\tIEnumerator<TableChange<");
            
            #line 451 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data>>? change = this.Table.GetVersionChangeChanges(oldVersion, newVersion);\r\n\t\t\t" +
                    "if(change != null) {\r\n\t\t\t\tbool handlerAttached = (this.CollectionChanged != null" +
                    ");\r\n\t\t\t\tList<");
            
            #line 454 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(">? add = (handlerAttached) ? new List<");
            
            #line 454 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(">() : null;\r\n\t\t\t\tthis.StartNotify");
            
            #line 455 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("SetChanged(oldVersion, newVersion);\r\n\t\t\t\twhile(change.MoveNext()) {\r\n\t\t\t\t\tthis.No" +
                    "tify");
            
            #line 457 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(@"SetChanged(change.Current);
					switch(change.Current.Action) {
					case SnapTableAction.Insert:
						Debug.Assert(this.Find(change.Current.RowId) != null, ""Why the item was not created?"");
						if(handlerAttached) {
							add!.Add(this.Find(change.Current.RowId)!);
						}
						break;
					case SnapTableAction.Delete:
");
            
            #line 466 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
if(this.RealmType != RealmType.Universe) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tDebug.Assert(this.Find(change.Current.RowId) == null, \"Why the item still e" +
                    "xists?\");\r\n");
            
            #line 468 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
} else {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tDebug.Assert(change.Current.GetOldField(");
            
            #line 469 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Data.");
            
            #line 469 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Field.Field).IsDeleted(), \"Why the item still exists?\");\r\n");
            
            #line 470 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
}
            
            #line default
            #line hidden
            this.Write(@"						break;
					default:
						Debug.Assert(change.Current.Action == SnapTableAction.Update, ""Unknown action"");
						Debug.Assert(this.Find(change.Current.RowId) != null, ""Why the item does not exist during update?"");
						this.Find(change.Current.RowId)!.NotifyChanged(change.Current);
						break;
					}
				}
				change.Dispose();
				if(handlerAttached) {
					if(deleted != null && 0 < deleted.Count) {
						this.NotifyCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, deleted));
					}
					if(0 < add!.Count) {
						this.NotifyCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, add));
					}
				}
				this.EndNotify");
            
            #line 488 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("SetChanged();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpartial void StartNotify");
            
            #line 492 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("SetChanged(int oldVersion, int newVersion);\r\n\t\tpartial void EndNotify");
            
            #line 493 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("SetChanged();\r\n\t\tpartial void Notify");
            
            #line 494 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("SetChanged(TableChange<");
            
            #line 494 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(@"Data> change);

		internal void NotifyRolledBack(int version) {
			if(this.Table.WasAffected(version)) {
				IEnumerator<RowId> change = this.Table.GetRolledBackChanges(version);
				if(change != null) {
					while(change.MoveNext()) {
						RowId rowId = change.Current;
						if(this.Table.IsDeleted(rowId)) {
");
            
            #line 503 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
if(this.RealmType == RealmType.Multiverse) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tthis.Delete(rowId);\r\n");
            
            #line 505 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.FindOrCreate(rowId);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchange.Di" +
                    "spose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n");
            
            #line 514 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
if(this.RealmType != RealmType.Universe) {
            
            #line default
            #line hidden
            this.Write("\r\n\t\tprivate class Enumerator : IEnumerator<");
            
            #line 516 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("> {\r\n\t\t\tprivate ");
            
            #line 517 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Set set;\r\n\t\t\tprivate IEnumerator<RowId> enumerator;\r\n\t\t\tpublic Enumerator(");
            
            #line 519 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write("Set set, IEnumerator<RowId> enumerator) {\r\n\t\t\t\tthis.set = set;\r\n\t\t\t\tthis.enumerat" +
                    "or = enumerator;\r\n\t\t\t}\r\n\r\n\t\t\tpublic bool MoveNext() {\r\n\t\t\t\treturn this.enumerato" +
                    "r.MoveNext();\r\n\t\t\t}\r\n\r\n\t\t\tpublic ");
            
            #line 528 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Table.Name));
            
            #line default
            #line hidden
            this.Write(@" Current { get { return this.set.Find(this.enumerator.Current); } }
			object System.Collections.IEnumerator.Current { get { return this.Current; } }

			public void Dispose() {
			}

			public void Reset() {
				throw new NotSupportedException();
			}
		}
");
            
            #line 538 "C:\Projects\LogicCircuit\LogicCircuit\master\Sources\Tools\ItemWrapper.Generator\GeneratorSetWrapper.tt"
}
            
            #line default
            #line hidden
            this.Write("\t}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
